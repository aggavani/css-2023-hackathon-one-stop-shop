type InputInformation @aws_iam @aws_api_key {
  id: ID!
  scope: String
  attribute: String
  marketplace: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelInputInformationConnection @aws_api_key @aws_iam {
  items: [InputInformation]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelInputInformationFilterInput {
  id: ModelIDInput
  scope: ModelStringInput
  attribute: ModelStringInput
  marketplace: ModelStringInput
  and: [ModelInputInformationFilterInput]
  or: [ModelInputInformationFilterInput]
  not: ModelInputInformationFilterInput
  _deleted: ModelBooleanInput
}

type Query {
  getInputInformation(id: ID!): InputInformation @aws_api_key @aws_iam
  listInputInformations(filter: ModelInputInformationFilterInput, limit: Int, nextToken: String): ModelInputInformationConnection @aws_api_key @aws_iam
  syncInputInformations(filter: ModelInputInformationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelInputInformationConnection @aws_api_key @aws_iam
}

input ModelInputInformationConditionInput {
  scope: ModelStringInput
  attribute: ModelStringInput
  marketplace: ModelStringInput
  and: [ModelInputInformationConditionInput]
  or: [ModelInputInformationConditionInput]
  not: ModelInputInformationConditionInput
  _deleted: ModelBooleanInput
}

input CreateInputInformationInput {
  id: ID
  scope: String
  attribute: String
  marketplace: String
  _version: Int
}

input UpdateInputInformationInput {
  id: ID!
  scope: String
  attribute: String
  marketplace: String
  _version: Int
}

input DeleteInputInformationInput {
  id: ID!
  _version: Int
}

type Mutation {
  createInputInformation(input: CreateInputInformationInput!, condition: ModelInputInformationConditionInput): InputInformation @aws_api_key @aws_iam
  updateInputInformation(input: UpdateInputInformationInput!, condition: ModelInputInformationConditionInput): InputInformation @aws_api_key @aws_iam
  deleteInputInformation(input: DeleteInputInformationInput!, condition: ModelInputInformationConditionInput): InputInformation @aws_api_key @aws_iam
}

input ModelSubscriptionInputInformationFilterInput {
  id: ModelSubscriptionIDInput
  scope: ModelSubscriptionStringInput
  attribute: ModelSubscriptionStringInput
  marketplace: ModelSubscriptionStringInput
  and: [ModelSubscriptionInputInformationFilterInput]
  or: [ModelSubscriptionInputInformationFilterInput]
  _deleted: ModelBooleanInput
}

type Subscription {
  onCreateInputInformation(filter: ModelSubscriptionInputInformationFilterInput): InputInformation @aws_subscribe(mutations: ["createInputInformation"]) @aws_api_key @aws_iam
  onUpdateInputInformation(filter: ModelSubscriptionInputInformationFilterInput): InputInformation @aws_subscribe(mutations: ["updateInputInformation"]) @aws_api_key @aws_iam
  onDeleteInputInformation(filter: ModelSubscriptionInputInformationFilterInput): InputInformation @aws_subscribe(mutations: ["deleteInputInformation"]) @aws_api_key @aws_iam
}
